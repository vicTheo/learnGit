<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
	"http://struts.apache.org/dtds/struts-2.3.dtd">
<struts>
	<!-- /primer/helloWorldAction.action
		package：包
			* name：包名，唯一的，必选项
			* namespace：命名空间，唯一的，相当于房间号。可选项，省略情况下是"/"。页面中请求连接的前半部分
			* extends：继承
				* extends="struts-default"：struts2框架底层提供的核心包struts2-core-2.3.3.jar下的struts-default.xml文件
				* 为什么要继承这个struts-default.xml文件？
					* 因为struts2框架底层提供的struts-default.xml声明了所有的拦截器和拦截器栈，
					     知道在struts2框架运行时执行struts-default.xml文件中的拦截器栈。
					* 如果不继承struts-default.xml文件，就没有办法使用struts2框架提供的所有拦截器
	 -->
	<package name="primer" namespace="/primer" extends="struts-default">
		
		<!-- 
			如果找不到对应的action名的时候，配置默认要执行的action 
				* name：指定action的名称
		-->
		<default-action-ref name="helloWorldAction" />
		
		<!-- 
			action：
				* name：对应页面中请求连接的后面半部分
				* class：对应要执行的类的完整路径
		 -->
		<action name="helloWorldAction" class="cn.itcast.primer.HelloWorldAction">
			<!-- 
				result：结果类型
					* name：对应的是执行的类的方法的返回值
						public String execute() throws Exception {
							System.out.println("HelloWorldAction ************* execute()");
							return "success";
						}
					* 后半部分的文本内容：要转向到的页面
			 -->
			<result name="success">/primer/success.jsp</result>
		</action>
		<!-- 
			没有为action指定class
				* 在struts2框架底层的struts-default.xml文件中，配置了默认执行的类
					com.opensymphony.xwork2.ActionSupport
						public String execute() throws Exception {
					        return SUCCESS;
					    }
				* 实际上，默认执行的是底层提供的ActionSupport类的execute()方法
				* result结果类型，默认是根据struts2框架底层提供的ActionSupport类的execute()方法返回值，进行跳转
		 -->
		<action name="actionNoClass">
			<result name="success">/primer/success.jsp</result>
		</action>
	</package>
</struts>